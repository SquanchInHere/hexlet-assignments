quit
locale ||= available_locale(locale) || I18n.default_locale.to_s
locale ||= I18n.default_locale.to_s
locale = extract_locale_from_header(env)
locale
extract_locale_from_header(env)
env 
quit 
env 
quit 
env
quit 
env
quit 
@middleware.call env
quit 
@middleware.call env
env 
quit 
env 
quit 
env
quit 
@middleware.call env_for('http://localhost', 'HTTP_ACCEPT_LANGUAGE' => 'ru,en;q=0.9,en-US;q=0.8')
env_for('http://localhost', 'HTTP_ACCEPT_LANGUAGE' => 'ru,en;q=0.9,en-US;q=0.8')
quit 
env['HTTP_ACCEPT_LANGUAGE'].split(',').map{ |tag| tag.split(';').first }
env['HTTP_ACCEPT_LANGUAGE'].split(',').map{ |tag| tag.split(';').first }.first
 env['HTTP_ACCEPT_LANGUAGE'].split(',').map{ |tag| tag.split(';').first }.first
quit 
env['HTTP_ACCEPT_LANGUAGE'].split(',').map{ |tag| tag.split(';').first }
env['HTTP_ACCEPT_LANGUAGE'].split(',').map { |tag| tag.split(';').first }
env['HTTP_ACCEPT_LANGUAGE'].split(',')
quit 
env['HTTP_ACCEPT_LANGUAGE'].split(',').map{|tag| tag.split(';').first}
env['HTTP_ACCEPT_LANGUAGE'].split(',').map { |tag| tag.split(';').first }
env['HTTP_ACCEPT_LANGUAGE'].split(',').map { |tag| tag.split(';').first }.first
quit 
env['HTTP_ACCEPT_LANGUAGE'].split(',').map { |tag| tag.split(';').first} .first
quit 
env['HTTP_ACCEPT_LANGUAGE'].split(',').scan(/^[a-z]{2}?/)
quit 
env['HTTP_ACCEPT_LANGUAGE'].split(',').scan(/^[a-z]{2}?/)
env['HTTP_ACCEPT_LANGUAGE'].split(',').scan(/^[a-z]{2}(?:-[A-Z]{2})?/)
env['HTTP_ACCEPT_LANGUAGE'].split(',')
env['HTTP_ACCEPT_LANGUAGE']
quit 
env['HTTP_ACCEPT_LANGUAGE']
env['HTTP_ACCEPT_LANGUAGE'].split(',').scan(/^[a-z]{2}(?:-[A-Z]{2})?/)
quit 
env['HTTP_ACCEPT_LANGUAGE']
env['HTTP_ACCEPT_LANGUAGE'].scan(/^[a-z]{2}(?:-[A-Z]{2})?/)
quit
env['HTTP_ACCEPT_LANGUAGE'].scan(/^[a-z]{2}/)
env['HTTP_ACCEPT_LANGUAGE']
env['HTTP_ACCEPT_LANGUAGE'].scan(/^[a-z]{2}/)
env['HTTP_ACCEPT_LANGUAGE'].scan(/^[a-z]{2}/).first
env['HTTP_ACCEPT_LANGUAGE']
extract_locale_from_header(env)
locale
quit 
I18n.locale
quit 
I18n.locale
